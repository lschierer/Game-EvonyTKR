openapi: 3.1.0
info:
  description: |
    Allow users to obtain information on Generals, General Pairs, General Conflicts, General SkillBooks, General Specialities, and related  information for Evony TKR
  title: Evony TKR API
  version: 0.0.2
components:
  parameters:
    name:
      description: |
        the name of the General
      in: path
      name: name
      required: true
      schema:
        type: string
  responses:
    BadRequest:
      description: >
        The server recieved a request to a valid endpoint containing invalid request values
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    InternalServerErrror:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
      description: >
        The server encountered an unexpected condition that prevented it from fulfilling
        the request. Report the issue to the support team if it persists.
    NoContent:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
      description: The request was successful, but there is no content to return in the response.
    NotFound:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
      description: >
        The server cannot find the requested resource. The endpoint may be invalid or the
        resource may no longer exist.
  schemas:
    Error:
      type: object
      properties:
        code:
          oneOf:
            - type: string
            - type: integer
        message:
          type: string
      required:
        - code
        - message
    Ascending:
      description: The overall effeects of Ascending a General
      properties:
        active_level:
          $ref: "#/components/schemas/AscendingLevelNames"
        levels:
          items:
            $ref: "#/components/schemas/AscendingLevel"
          type: array
      required:
        - levels
      type: object
    AscendingLevel:
      description: The effect of one star of ascending
      properties:
        buffs:
          items:
            $ref: "#/components/schemas/Buff"
          type: array
        level:
          $ref: "#/components/schemas/AscendingLevelNames"
      required:
        - buffs
        - level
      type: object
    AscendingLevelNames:
      description: |
        A general Ascends as either a Red or a Purple General but not both.
      oneOf:
        - enum:
            - none
        - $ref: "#/components/schemas/RedGeneralAscendingLevels"
        - $ref: "#/components/schemas/PurpleGeneralAscendingLevels"
    AscendingSummary:
      description: |
        The buffs provided foor a general ascended at a particualr number of stars.
      properties:
        active_level:
          $ref: "#/components/schemas/AscendingLevelNames"
        buffs:
          items:
            $ref: "#/components/schemas/Buff"
          type: array
      required:
        - active_level
        - buffs
      type: object
      x-fiddle-dto-info:
        baseSchemaName: Ascending
    BasicAttributes:
      properties:
        attack:
          $ref: "#/components/schemas/BasicAttributesObject"
        defense:
          $ref: "#/components/schemas/BasicAttributesObject"
        leadership:
          $ref: "#/components/schemas/BasicAttributesObject"
        politics:
          $ref: "#/components/schemas/BasicAttributesObject"
      required:
        - attack
        - defense
        - leadership
        - politics
      type: object
    BasicAttributesObject:
      properties:
        base:
          format: float
          minimum: 0
          type: number
        increment:
          format: float
          minimum: 0
          type: number
        total:
          format: float
          minimum: 0
          type: number
      required:
        - base
        - increment
        - total
      type: object
    BasicAttributesObjectSummary:
      description: A simplified representation of a BasicAttributesObject, typically used in list views.
      properties:
        base:
          type: number
        increment:
          type: number
        total:
          type: number
      type: object
      x-fiddle-dto-info:
        baseSchemaName: BasicAttributesObject
    BasicAttributesSummary:
      description: "A summary of the values that the basic attributes have at a particular level, after they have been computed for that level. "
      properties:
        attack:
          $ref: "#/components/schemas/BasicAttributesObjectSummary"
        defense:
          $ref: "#/components/schemas/BasicAttributesObjectSummary"
        leadership:
          $ref: "#/components/schemas/BasicAttributesObjectSummary"
        politics:
          $ref: "#/components/schemas/BasicAttributesObjectSummary"
      required:
        - attack
        - defense
        - leadership
        - politics
      type: object
      x-fiddle-dto-info:
        baseSchemaName: BasicAttributes
    Buff:
      properties:
        attribute:
          oneOf:
            - $ref: "#/components/schemas/BuffAttributes"
            - items:
                $ref: "#/components/schemas/BuffAttributes"
              type: array
        conditions:
          oneOf:
            - $ref: "#/components/schemas/Condition"
            - items:
                $ref: "#/components/schemas/Condition"
              type: array
        passive:
          default: false
          type: boolean
        value:
          properties:
            number:
              format: float
              minimum: 0
              type: number
            unit:
              default: percentage
              enum:
                - flat
                - percentage
              type: string
          required:
            - number
            - unit
          type: object
      required:
        - attribute
        - value
      type: object
    BuffAttributes:
      oneOf:
        - description: The many possible attributes that can be buffed
          enum:
            - attack
            - attack_speed
            - death_to_survival
            - death_to_soul
            - death_to_wounded
            - defense
            - deserter_capacity
            - double_items_drop_rate
            - hp
            - healing_speed
            - hospital_capacity
            - leadership
            - load
            - march_size_capacity
            - march_time
            - marching_speed
            - marching_speed_to_monsters
            - politics
            - rally_capacity
            - range
            - resources_production
            - stamina_cost
            - subcity_construction_speed
            - subcity_gold_production
            - subcity_training_speed
            - subcity_troop_capacity
            - training_capacity
            - training_speed
            - wounded_to_death
          type: string
    BuffCondition:
      description: Some Buffs apply only conditionally
      enum:
        - against_monsters
        - attacking
        - defending
        - during_svs
        - in_city
        - in_main_city
        - marching
        - reinforcing
        - when_city_mayor
        - when_city_mayor_for_this_subcity
        - when_defending_outside_the_main_city
        - when_rallying
        - when_the_main_defense_general
        - when_an_officer
        - brings_a_dragon
        - brings_a_dragon_to_the_attack
        - brings_a_dragon_or_spirital_beast
        - brings_a_dragon_or_spritial_beast_to_the_attack
        - leading_the_army_to_attack
      type: string
    BuiltinBook:
      description: "A General's Builtin Book "
      properties:
        buffs:
          items:
            $ref: "#/components/schemas/Buff"
          type: array
        name:
          type: string
      required:
        - buffs
        - name
      type: object
    Condition:
      description: "A condition is essentially an adverb for a Buff object. "
      oneOf:
        - anyOf:
            - $ref: "#/components/schemas/BuffCondition"
            - $ref: "#/components/schemas/DebuffConditions"
        - items:
            anyOf:
              - $ref: "#/components/schemas/BuffCondition"
              - $ref: "#/components/schemas/DebuffConditions"
          type: array
    DebuffConditions:
      description: Some Buffs are in fact Debuffs
      enum:
        - enemy
        - enemy_in_city
        - reduces_enemy
        - reduces_enemy_in_attack
        - reduces_enemy_with_a_dragon
        - reduces_enemy_with_a_dragon_or_spiritual_beast
        - reduces
      type: string
    General:
      properties:
        ascending:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/Ascending"
            - $ref: "#/components/schemas/AscendingSummary"
        basic_attributes:
          oneOf:
            - $ref: "#/components/schemas/BasicAttributes"
            - $ref: "#/components/schemas/BasicAttributesSummary"
        built_in_book:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/BuiltinBook"
        level:
          maximum: 45
          minimum: 1
          type: integer
        name:
          type: string
        other_books:
          oneOf:
            - items:
                type: string
              type: array
            - items:
                $ref: "#/components/schemas/StandardBook"
              type: array
        skin:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/Skin"
        specialities:
          oneOf:
            - items:
                type: string
              type: array
            - items:
                $ref: "#/components/schemas/Speciality"
              type: array
            - items:
                $ref: "#/components/schemas/SpecialityEffect"
              type: array
        type:
          oneOf:
            - $ref: "#/components/schemas/GeneralEvaluationTypes"
            - items:
                $ref: "#/components/schemas/GeneralEvaluationTypes"
              type: array
      required:
        - ascending
        - basic_attributes
        - built_in_book
        - level
        - name
        - specialities
        - type
        - other_books
      type: object
    GeneralEvaluationTypes:
      enum:
        - ground_specialist
        - ranged_specialist
        - mounted_specialist
        - siege_specialist
        - mayor
        - wall_general
        - officer
      type: string
    GeneralSummary:
      description: The minimal information necessary to find a General
      properties:
        name:
          type: string
        type:
          oneOf:
            - $ref: "#/components/schemas/GeneralEvaluationTypes"
            - items:
                $ref: "#/components/schemas/GeneralEvaluationTypes"
              type: array
      type: object
      x-fiddle-dto-info:
        baseSchemaName: General
    PurpleGeneralAscendingLevels:
      description: Ascending Levels for Purple Generals
      enum:
        - purple1
        - purple2
        - purple3
        - purple4
        - purple5
      type: string
    RedGeneralAscendingLevels:
      description: AscendingLevels for Red Generals
      enum:
        - red1
        - red2
        - red3
        - red4
        - red5
      type: string
    Skin:
      description: Some generals have Skins or alternate outfits that add buffs
      properties:
        active_buffs:
          items:
            $ref: "#/components/schemas/Buff"
          type: array
        name:
          type: string
        passive_buffs:
          items:
            $ref: "#/components/schemas/Buff"
          type: array
      required:
        - name
        - passive_buffs
        - active_buffs
      type: object
    Speciality:
      properties:
        active_level:
          $ref: "#/components/schemas/SpecialityLevelNames"
        levels:
          items:
            $ref: "#/components/schemas/SpecialityLevel"
          type: array
        name:
          type: string
      required:
        - levels
        - name
      type: object
    SpecialityEffect:
      description: The Effective Buff Provided by a Speciality at a particular level
      properties:
        active_level:
          oneOf:
            - $ref: "#/components/schemas/SpecialityLevelNames"
        buff:
          items:
            $ref: "#/components/schemas/Buff"
          type: array
        name:
          type: string
      required:
        - active_level
        - buff
      type: object
      x-fiddle-dto-info:
        baseSchemaName: Speciality
    SpecialityLevel:
      type: object
      properties:
        buffs:
          items:
            $ref: "#/components/schemas/Buff"
          type: array
        level:
          $ref: "#/components/schemas/SpecialityLevelNames"
      required:
        - buffs
        - level
    SpecialityLevelNames:
      default: none
      enum:
        - none
        - green
        - blue
        - purple
        - orange
        - gold
      type: string
    StandardBook:
      description: Standard Books that can be added to a General
      properties:
        buffs:
          items:
            $ref: "#/components/schemas/Buff"
          type: array
        level:
          format: int32
          maximum: 4
          minimum: 1
          type: integer
        name:
          type: string
      required:
        - buffs
        - level
        - name
      type: object
paths:
  /generals:
    get:
      description: |
        a summary listing of all available generals
      operationId: getAllGenerals
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/GeneralSummary"
                    type: array
                required:
                  - data
                title: GetAllGeneralsOk
                type: object
          description: OK - Successful request with response body
        "204":
          $ref: "#/components/responses/NoContent"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerErrror"
      summary: Get all Generals
      tags:
        - generals
  /generals/named/{name}:
    get:
      description: "Returns the general with the matching name. "
      operationId: getAGeneralByName
      parameters:
        - allowReserved: false
          description: return verbose results
          explode: true
          in: query
          name: verbose
          required: false
          schema:
            type: boolean
          style: form
        - allowReserved: false
          description: set the level of the general you want information about
          explode: true
          in: query
          name: level
          required: false
          schema:
            type: integer
          style: form
        - $ref: "#/components/parameters/name"
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: "#/components/schemas/General"
                required:
                  - data
                title: GetAGeneralByNameOk
                type: object
          description: OK - Successful request with response body
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerErrror"
      summary: Get a General by Name
      tags:
        - generals
tags:
  - description: |
      items dealing with generals
    name: generals
