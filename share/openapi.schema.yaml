openapi: 3.1.0
info:
  title: Evony TKR API
  version: 0.0.2
  description: |
    Allow users to obtain information on Generals, General Pairs, General Conflicts, General SkillBooks, General Specialities, and related  information for Evony TKR
paths:
  /generals.json:
    get:
      operationId: generalsJsonList
      tags:
        - generals
      summary: Get all Generals
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/GeneralList"
                minItems: 4
                maxItems: 10
          description: OK - Successful request with response body
        "204":
          $ref: "#/components/responses/NoContent"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerErrror"
      description: |
        a summary listing of all available generals
  /generals:
    get:
      operationId: generalsHTMLList
      tags:
        - generals
      summary: Get all Generals
      responses:
        "200":
          content:
            text/html:
              schema:
                type: string
                maxLength: 10000
          description: OK - Successful request with response body
        "204":
          $ref: "#/components/responses/NoContent"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerErrror"
      description: |
        a summary listing of all available generals
  /generals.txt:
    get:
      operationId: generalsTXTList
      tags:
        - generals
      summary: Get all Generals
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
                maxLength: 10000
          description: OK - Successful request with response body
        "204":
          $ref: "#/components/responses/NoContent"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerErrror"
      description: |
        a summary listing of all available generals
  /generals/byId/{id}.json:
    get:
      operationId: byIdJSON
      tags:
        - generals
      summary: Get a General by Id
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                title: GetAGeneralByIdOk
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/General"
          description: OK - Successful request with response body
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerErrror"
      parameters:
        - in: query
          name: verbose
          style: form
          schema:
            type: boolean
          explode: true
          required: false
          description: return verbose results
          allowReserved: false
        - in: query
          name: level
          style: form
          schema:
            type: integer
            format: int32
            maximum: 45
            minimum: 1
          explode: true
          required: false
          description: set the level of the general you want information about
          allowReserved: false
        - $ref: "#/components/parameters/id"
      description: Returns the general with the matching id.
  /generals/uuid/{type}/{name}:
    get:
      operationId: uuidForTypeAndName
      tags:
        - generals
      summary: "Get a UUID for a type/name pair "
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
                format: uuid
                maxLength: 100
          description: OK - Successful request with response body containing the UUID for the general
        "204":
          $ref: "#/components/responses/NoContent"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerErrror"
      parameters:
        - $ref: "#/components/parameters/type"
        - $ref: "#/components/parameters/name"
components:
  schemas:
    Buff:
      type: object
      required:
        - attribute
        - value
      properties:
        value:
          type: object
          required:
            - number
            - unit
          properties:
            unit:
              enum:
                - flat
                - percentage
              type: string
              default: percentage
            number:
              type: number
              format: float
              minimum: 0
        passive:
          type: boolean
          default: false
        attribute:
          oneOf:
            - $ref: "#/components/schemas/BuffAttributes"
            - type: array
              items:
                $ref: "#/components/schemas/BuffAttributes"
              maxItems: 10
        conditions:
          oneOf:
            - $ref: "#/components/schemas/Condition"
            - type: array
              items:
                $ref: "#/components/schemas/Condition"
              maxItems: 10
    Skin:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          maxLength: 1000
        activeBuffs:
          type: array
          items:
            $ref: "#/components/schemas/Buff"
          maxItems: 10
        passiveBuffs:
          type: array
          items:
            $ref: "#/components/schemas/Buff"
          maxItems: 10
      description: Some generals have Skins or alternate outfits that add buffs
    General:
      type: object
      required:
        - ascending
        - basicAttributes
        - builtInBook
        - name
        - specialities
        - type
      properties:
        name:
          type: string
          maxLength: 1000
        skin:
          oneOf:
            - type: string
              maxLength: 1000
            - $ref: "#/components/schemas/Skin"
        type:
          oneOf:
            - $ref: "#/components/schemas/GeneralEvaluationTypes"
            - type: array
              items:
                $ref: "#/components/schemas/GeneralEvaluationTypes"
              maxItems: 5
        level:
          type: integer
          format: int32
          maximum: 45
          minimum: 1
        ascending:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/Ascending"
            - $ref: "#/components/schemas/AscendingSummary"
        otherBooks:
          oneOf:
            - type: array
              items:
                type: string
                maxLength: 1000
              maxItems: 4
            - type: array
              items:
                $ref: "#/components/schemas/StandardBook"
              maxItems: 4
        builtInBook:
          oneOf:
            - type: string
              maxLength: 1000
            - $ref: "#/components/schemas/BuiltinBook"
        specialities:
          oneOf:
            - type: array
              items:
                type: string
                maxLength: 1000
              maxItems: 5
            - type: array
              items:
                $ref: "#/components/schemas/Speciality"
              maxItems: 5
            - type: array
              items:
                $ref: "#/components/schemas/SpecialityEffect"
              maxItems: 5
        basicAttributes:
          oneOf:
            - $ref: "#/components/schemas/BasicAttributes"
            - $ref: "#/components/schemas/BasicAttributesSummary"
    Ascending:
      type: object
      required:
        - levels
      properties:
        levels:
          type: array
          items:
            $ref: "#/components/schemas/AscendingLevel"
          maxItems: 15
        activeLevel:
          $ref: "#/components/schemas/AscendingLevelNames"
      description: The overall effeects of Ascending a General
    Condition:
      oneOf:
        - anyOf:
            - $ref: "#/components/schemas/BuffCondition"
            - $ref: "#/components/schemas/DebuffConditions"
        - type: array
          items:
            anyOf:
              - $ref: "#/components/schemas/BuffCondition"
              - $ref: "#/components/schemas/DebuffConditions"
          maxItems: 10
      description: "A condition is essentially an adverb for a Buff object. "
    Speciality:
      type: object
      required:
        - levels
        - name
      properties:
        name:
          type: string
          maxLength: 1000
        levels:
          type: array
          items:
            $ref: "#/components/schemas/SpecialityLevel"
          maxItems: 6
        activeLevel:
          $ref: "#/components/schemas/SpecialityLevelNames"
    BuiltinBook:
      type: object
      required:
        - name
        - text
      properties:
        name:
          type: string
          maxLength: 1000
        text:
          type: string
          maxLength: 2048
        buffs:
          type: array
          items:
            $ref: "#/components/schemas/Buff"
          maxItems: 10
      description: A General's Builtin Book
    StandardBook:
      type: object
      required:
        - buffs
        - level
        - name
      properties:
        name:
          type: string
          maxLength: 1000
        buffs:
          type: array
          items:
            $ref: "#/components/schemas/Buff"
          maxItems: 10
        level:
          type: integer
          format: int32
          maximum: 4
          minimum: 1
      description: Standard Books that can be added to a General
    BuffCondition:
      enum:
        - Against_Monsters
        - Attacking
        - Defending
        - During_SvS
        - In_City
        - In_Main_City
        - Marching
        - Reinforcing
        - When_City_Mayor
        - When_City_Mayor_for_This_SubCity
        - When_Defending_Outside_the_Main_City
        - When_Rallying
        - When_the_Main_Defense_General
        - When_an_Officer
        - Brings_a_Dragon
        - Brings_a_Dragon_to_the_Attack
        - Brings_a_Dragon_or_Spirital_Beast
        - Brings_a_Dragon_or_Spritial_Beast_to_the_Attack
        - Leading_the_Army_to_Attack
      type: string
      description: Some Buffs apply only conditionally
    AscendingLevel:
      type: object
      required:
        - buffs
        - level
      properties:
        buffs:
          type: array
          items:
            $ref: "#/components/schemas/Buff"
          maxItems: 10
        level:
          $ref: "#/components/schemas/AscendingLevelNames"
      description: The effect of one star of ascending
    BuffAttributes:
      oneOf:
        - enum:
            - Attack
            - Attack_Speed
            - Death_to_Survival
            - Death_to_Soul
            - Death_to_Wounded
            - Defense
            - Deserter_Capacity
            - Double_Items_Drop_Rate
            - HP
            - Healing_Speed
            - Hospital_Capacity
            - Leadership
            - Load
            - March_Size_Capacity
            - March_Time
            - Marching_Speed
            - Marching_Speed_to_Monsters
            - Politics
            - Rally_Capacity
            - Range
            - Resources_Production
            - Stamina_Cost
            - SubCity_Construction_Speed
            - SubCity_Gold_Production
            - SubCity_Training_Speed
            - SubCity_Troop_Capacity
            - Training_Capacity
            - Training_Speed
            - Wounded_to_Death
          type: string
          description: The many possible attributes that can be buffed
    GeneralList:
      type: object
      properties:
        type:
          $ref: "#/components/schemas/GeneralEvaluationTypes"
        members:
          type: array
          items:
            type: string
            maxLength: 1000
          maxItems: 1000
    GeneralSummary:
      type: object
      properties:
        name:
          type: string
          maxLength: 1000
        type:
          oneOf:
            - $ref: "#/components/schemas/GeneralEvaluationTypes"
            - type: array
              items:
                $ref: "#/components/schemas/GeneralEvaluationTypes"
              maxItems: 5
      description: The minimal information necessary to find a General
      x-fiddle-dto-info:
        baseSchemaName: General
    BasicAttributes:
      type: object
      required:
        - attack
        - defense
        - leadership
        - politics
      properties:
        attack:
          $ref: "#/components/schemas/BasicAttributesObject"
        defense:
          $ref: "#/components/schemas/BasicAttributesObject"
        politics:
          $ref: "#/components/schemas/BasicAttributesObject"
        leadership:
          $ref: "#/components/schemas/BasicAttributesObject"
    SpecialityLevel:
      type: object
      required:
        - Buffs
        - level
      properties:
        Buffs:
          type: array
          items:
            $ref: "#/components/schemas/Buff"
          maxItems: 10
        level:
          $ref: "#/components/schemas/SpecialityLevelNames"
    AscendingSummary:
      type: object
      required:
        - activeLevel
        - buffs
      properties:
        buffs:
          type: array
          items:
            $ref: "#/components/schemas/Buff"
          maxItems: 10
        activeLevel:
          $ref: "#/components/schemas/AscendingLevelNames"
      description: |
        The buffs provided foor a general ascended at a particualr number of stars.
      x-fiddle-dto-info:
        baseSchemaName: Ascending
    DebuffConditions:
      enum:
        - Enemy
        - Enemy_in_City
        - Reduces_Enemy
        - Reduces_Enemy_in_Attack
        - Reduces_Enemy_with_a_Dragon
        - Reduces_Enemy_with_a_Dragon_or_Spiritual_Beast
        - Reduces
      type: string
      description: Some Buffs are in fact Debuffs
    SpecialityEffect:
      type: object
      required:
        - name
        - activeLevel
      properties:
        buff:
          type: array
          items:
            $ref: "#/components/schemas/Buff"
          maxItems: 10
        name:
          type: string
          maxLength: 1000
        activeLevel:
          oneOf:
            - $ref: "#/components/schemas/SpecialityLevelNames"
      description: The Effective Buff Provided by a Speciality at a particular level
      x-fiddle-dto-info:
        baseSchemaName: Speciality
    AscendingLevelNames:
      oneOf:
        - type: string
          const: none
        - $ref: "#/components/schemas/RedGeneralAscendingLevels"
        - $ref: "#/components/schemas/PurpleGeneralAscendingLevels"
      default: none
      description: |
        A general Ascends as either a Red or a Purple General but not both.
    SpecialityLevelNames:
      enum:
        - None
        - Green
        - Blue
        - Purple
        - Orange
        - Gold
      type: string
      default: None
    BasicAttributesObject:
      type: object
      required:
        - base
        - increment
        - total
      properties:
        base:
          type: number
          format: float
          minimum: 0
        total:
          type: number
          format: float
          minimum: 0
        increment:
          type: number
          format: float
          minimum: 0
    BasicAttributesSummary:
      type: object
      required:
        - attack
        - defense
        - leadership
        - politics
      properties:
        attack:
          $ref: "#/components/schemas/BasicAttributesObjectSummary"
        defense:
          $ref: "#/components/schemas/BasicAttributesObjectSummary"
        politics:
          $ref: "#/components/schemas/BasicAttributesObjectSummary"
        leadership:
          $ref: "#/components/schemas/BasicAttributesObjectSummary"
      description: "A summary of the values that the basic attributes have at a particular level, after they have been computed for that level. "
      x-fiddle-dto-info:
        baseSchemaName: BasicAttributes
    GeneralEvaluationTypes:
      enum:
        - ground_specialist
        - ranged_specialist
        - mounted_specialist
        - siege_specialist
        - mayor
        - wall_general
        - officer
      type: string
    RedGeneralAscendingLevels:
      enum:
        - 1red
        - 2red
        - 3red
        - 4red
        - 5red
      type: string
      description: AscendingLevels for Red Generals
    BasicAttributesObjectSummary:
      type: object
      required: []
      properties:
        base:
          type: number
        total:
          type: number
        increment:
          type: number
      description: A simplified representation of a BasicAttributesObject, typically used in list views.
      x-fiddle-dto-info:
        baseSchemaName: BasicAttributesObject
    PurpleGeneralAscendingLevels:
      enum:
        - 1purple
        - 2purple
        - 3purple
        - 4purple
        - 5purple
      type: string
      description: Ascending Levels for Purple Generals
  responses:
    NotFound:
      content:
        application/json:
          schema:
            type: object
            required:
              - message
            properties:
              message:
                type: string
                maxLength: 1000
      description: The server cannot find the requested resource. The endpoint may be invalid or the resource may no longer exist.
    NoContent:
      content:
        application/json:
          schema:
            type: "null"
      description: The request was successful, but there is no content to return in the response.
    BadRequest:
      content:
        application/json:
          schema:
            type: object
            required:
              - message
            properties:
              errors:
                type: array
                items:
                  type: object
                  required:
                    - message
                  properties:
                    message:
                      type: string
                      maxLength: 1000
                maxItems: 10
              message:
                type: string
                maxLength: 1000
      description: The server could not understand the request due to invalid syntax. The client should modify the request and try again.
    InternalServerErrror:
      content:
        application/json:
          schema:
            type: object
            required:
              - message
            properties:
              message:
                type: string
                maxLength: 1000
      description: The server encountered an unexpected condition that prevented it from fulfilling the request. Report the issue to the support team if it persists.
  parameters:
    id:
      in: path
      name: id
      schema:
        type: string
        format: uuid
        maxLength: 100
      required: true
      description: |
        the name of the General
    name:
      in: path
      name: name
      schema:
        type: string
        maxLength: 100
      required: true
    type:
      in: path
      name: type
      schema:
        $ref: "#/components/schemas/GeneralEvaluationTypes"
      required: true
tags:
  - name: generals
    description: |
      items dealing with generals
