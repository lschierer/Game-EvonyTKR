#!/usr/bin/env perl
# PODNAME: Game::EvonyTKR
# ABSTRACT: Run/Execute the library with defaults.
use v5.40.0;
use utf8::all;
use strict;
use warnings;
use Carp;
use FindBin;
use File::ShareDir ':ALL';
use File::Spec;
use File::HomeDir;
use File::Touch;
use Log::Log4perl qw(get_logger);
use Log::Log4perl::Level ();
use lib "$FindBin::Bin/../lib";

use Game::EvonyTKR;

use namespace::autoclean;

use Plack::Runner;


package main;

_logInit();
my $logger = get_logger('Game::EvonyTKR');

use Game::EvonyTKR::REST;

$logger->info('Starting Game::EvonyTKR::REST');

# Copied from the plackup script, which I am not using because I need to initialize log4perl myself. 
my $runner = Plack::Runner->new;
$runner->parse_options(@ARGV);
$runner->run(Game::EvonyTKR::REST->to_app());

sub _logInit() {
    my $home      = File::HomeDir->my_home;
    my $logDir    = File::Spec->catdir($home , 'var/log/Perl/dist/Game-Evony/');
    if(! -r -w  -x -o -d $logDir) {
        make_path($logDir,"0770");
      }
    my $logFile   = File::Spec->catfile($logDir, 'dancer2.log');
    if( ! -e $logFile) {
      File::Touch::touch($logFile);
      chmod(0600, $logFile);
    } 

    my %conf = (
      "log4perl.rootLogger"                   => "ALL, logFile",

      "log4perl.appender.logFile"             => "Log::Log4perl::Appender::File",
      "log4perl.appender.logFile.utf8"        => 1,
      "log4perl.appender.logFile.filename"    => $logFile,
      "log4perl.appender.Logfile.DatePattern" => "yyyy-MM-dd",
      "log4perl.appender.Logfile.TZ"          => "UTC",
      "log4perl.appender.logFile.mode"        => "append",
      "log4perl.appender.logFile.layout"      => "Log::Log4perl::Layout::PatternLayout",
      "log4perl.appender.logFile.layout.ConversionPattern" => "[%p] %d (%C line %L) %m%n",
    );
    # ... passed as a reference to init()
    Log::Log4perl::init( \%conf );
    return $logFile;
  }

